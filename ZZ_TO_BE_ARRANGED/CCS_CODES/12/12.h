//***************************************************************************************************************************************************
//***************************************************************************************************************************************************
//*****************************************************************HEADER**FILE**********************************************************************
//***************************************************************************************************************************************************
//***************************************************************************************************************************************************
#INCLUDE <12F1822.h>
//*************************************************************************************************************************************************//
//*******************************************************************INCLUDE**DEVICE***************************************************************//
//*************************************************************************************************************************************************//
//***********************************************************************ADC**BIT******************************************************************//
#DEVICE ADC = 10
//********************************************************************SETTING**FUSEs***************************************************************//
#FUSES HS
#FUSES NOWDT
#FUSES PROTECT
#FUSES NOBROWNOUT
#FUSES NOLVP
#FUSES NOPUT
#FUSES NOWRT
#FUSES NODEBUG
#FUSES NOCPD
#FUSES NOMCLR
//*************************************************************************************************************************************************//
//********************************************************************SETTING**USEs****************************************************************//
//*************************************************************************************************************************************************//
//*************************************************************************************************************************************USE**DELAY**//
#USE DELAY(INTERNAL = 4000000)
//*************************************************************************************************************************************************//
//*****************************************************************PORT***DEFINES******************************************************************//
//*************************************************************************************************************************************************//
//**********************************************************************************************************************************BASIC**VALUEs**//
#DEFINE ALL_ZERO_8_BIT                                   0x00
#DEFINE ALL_ZERO_16_BIT                                  0x0000
#DEFINE ALL_ZERO_32_BIT                                  0x00000000
#DEFINE ALL_ONE_8_BIT                                    0xFF
#DEFINE ALL_ONE_16_BIT                                   0xFFFF
#DEFINE ALL_ONE_32_BIT                                   0xFFFFFFFF
#DEFINE MINUS_ONE                                        -1                    
//******************************************************************************************************************************SET**TRIS**VALUEs**//
#DEFINE VALUE_TRIS_A                                     0x02
//********************************************************************************************************************************CURRENT**VALUEs**//
#DEFINE VALUE_SIDE_CURRENT                               8
//************************************************************************************************************************************PWM**VALUEs**//
#DEFINE VALUE_SPEED                                      1023
//*************************************************************************************************************************************************//
#DEFINE MOTOR_POWER_ON                                   PIN_A5
//*************************************************************************************************************************************************//
#DEFINE MOTOR_DIRECTION                                  PIN_A4
//*************************************************************************************************************************************************//
#DEFINE MOTOR_SPEED                                      PIN_A2
//*******************************************************************************************************************************CURRENT**CONTROL**//
#DEFINE CURRENT_PORT                                     PIN_A1
//**************************************************************************************************************************************ADC**PINs**//
#DEFINE ADC_Current                                      sAN1
//***********************************************************************************************************************************ADC**CHANNEL**//
#DEFINE CHANNEL_Current                                  1
//*************************************************************************************************************************************************//
//*******************************************************************FUNCTIONs*********************************************************************//
//*************************************************************************************************************************************************//
//********************************************************************************************************************************MAIN**FUNCTIONs**//
VOID Setting();
//***************************************************************************************************************************READ**ADC**FUNCTIONs**//
VOID Read_Current();
//*************************************************************************************************************************************************//
VOID Sunroof_Up();
VOID Sunroof_Down();
//*************************************************************************************************************************************************//
VOID Motor_Seep_Control();
//*********************************************************************************************************************MOTOR**MOVEMENT**FUNCTIONs**//
VOID Turn_Right_Sunroof();
VOID Turn_Left_Sunroof();
VOID Stop_Sunroof();
//*************************************************************************************************************************************************//
//**************************************************************INTEGER**VARIABLEs*****************************************************************//
//*************************************************************************************************************************************************//
//*********************************************************************************************************************************ADC**VARIABLEs**//
INT16 value_current                                            = ALL_ZERO_16_BIT;
INT16 value_current_temporary                                  = ALL_ZERO_16_BIT;
INT32 register_adc                                             = ALL_ZERO_32_BIT;
//*************************************************************************************************************************************************//
INT16 counter_sunroof_up                                       = ALL_ZERO_16_BIT;
INT16 counter_sunroof_down                                     = ALL_ZERO_16_BIT;
//*************************************************************************************************************************************************//
//*************************************************************BOOLEAN**VARIABLEs******************************************************************//
//*************************************************************************************************************************************************//
//***********************************************************************************************************************STATE**SUNROOF**UP**DOWN**//
BOOLEAN state_sunroof_up                                       = FALSE;
BOOLEAN state_sunroof_down                                     = FALSE;
//*************************************************************************************************************************************************//
//*****************************************************************SETTING*************************************************************************//
//*************************************************************************************************************************************************//
VOID Setting(){
//***************************************************************************************************************************CLOSING**ALL**OUTPUT**//
   OUTPUT_A(ALL_ZERO_8_BIT);
   DELAY_MS(50);
//***************************************************************************************************************************SETTING**ALL**OUTPUT**//
   SET_TRIS_A(VALUE_TRIS_A);
//********************************************************************************************************************************SETUP**TIMER**2**//
   SETUP_TIMER_2(T2_DIV_BY_1, 255, 1);
//****************************************************************************************************************************SETTING**ADC**PORTs**//
   register_adc                  = register_adc | ADC_Current;
   register_adc                  = register_adc | VSS_VDD;
   SETUP_ADC_PORTS(register_adc);
   SETUP_ADC(RTCC_INTERNAL|ADC_CLOCK_DIV_8);
   DELAY_MS(1000);
}
//*************************************************************************************************************************************************//
//***************************************************************SUNROOF**CONTROLLER**UP***********************************************************//
//*************************************************************************************************************************************************//
VOID Motor_Speed_Control(){
//************************************************************************************************************************SETTING**SPEED**HIGHEST**//
   SETUP_CCP1(CCP_PWM);
   set_pwm1_duty(VALUE_SPEED);
}
//*************************************************************************************************************************************************//
//***************************************************************SUNROOF**CONTROLLER**UP***********************************************************//
//*************************************************************************************************************************************************//
VOID Sunroof_Up(){
   Turn_Right_Sunroof();
   DELAY_MS(1000);
   state_sunroof_up                                            = FALSE;
   WHILE(!state_sunroof_up){
      Turn_Right_Sunroof();
      DELAY_MS(100);
      Read_Current();
      IF(value_current > VALUE_SIDE_CURRENT){
         state_sunroof_up                                      = TRUE;
         Stop_Sunroof();
         DELAY_MS(500);
      }
   }
}
//*************************************************************************************************************************************************//
//**************************************************************SUNROOF**CONTROLLER**DOWN**********************************************************//
//*************************************************************************************************************************************************//
VOID Sunroof_Down(){
   Turn_Left_Sunroof();
   DELAY_MS(1000);
   state_sunroof_down                                          = FALSE;
   WHILE(!state_sunroof_down){
      Turn_Left_Sunroof();
      DELAY_MS(100);
      Read_Current();
      IF(value_current > VALUE_SIDE_CURRENT){
         state_sunroof_down                                    = TRUE;
         Stop_Sunroof();
         DELAY_MS(500);
      }
   }
}
//*************************************************************************************************************************************************//
//*******************************************************************READ**MOTOR*******************************************************************//
//*************************************************************************************************************************************************//
//*************************************************************************************************************************CURRENT**DRIVER**VALVE**//
VOID Read_Current(){
   value_current                                               = 0;
   FOR(INT8 i = 0; i < 10; i++){
      SET_ADC_CHANNEL(CHANNEL_Current);
      DELAY_MS(5);
      value_current_temporary                                  = READ_ADC();
      value_current                                            = value_current + value_current_temporary;
   }
   value_current                                               = (value_current / 10);
}
//*************************************************************************************************************************************************//
//*****************************************************************MOTOR**MOVEMENT*****************************************************************//
//*************************************************************************************************************************************************//
//************************************************************************************************************************************TURN**RIGHT**//
VOID Turn_Right_Sunroof(){
   OUTPUT_HIGH(MOTOR_POWER_ON);
   OUTPUT_LOW(MOTOR_DIRECTION);
}
//************************************************************************************************************************************TURN**LEFT***//
VOID Turn_Left_Sunroof(){
   OUTPUT_HIGH(MOTOR_POWER_ON);
   OUTPUT_HIGH(MOTOR_DIRECTION);
}
//******************************************************************************************************************************************STOP***//
VOID Stop_Sunroof(){
   OUTPUT_LOW(MOTOR_POWER_ON);
}
//*************************************************************************************************************************************************//
//*************************************************************************************************************************************************//
//***********************************************************************END***********************************************************************//
//*************************************************************************************************************************************************//
//*************************************************************************************************************************************************//
